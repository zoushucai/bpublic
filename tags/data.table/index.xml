<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data.table on zsc</title>
    <link>/tags/data.table/</link>
    <description>Recent content in data.table on zsc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 18 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/data.table/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>data.table -- 3常见操作</title>
      <link>/md/2018-01-18-datatable3/</link>
      <pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/md/2018-01-18-datatable3/</guid>
      <description>knitr::opts_chunk$set(message = F,warning = F,comment = &amp;#34;#&amp;gt;&amp;#34;,collapse = TRUE) 数据准备
library(data.table) library(magrittr) iris_1 = data.table(iris[1:5,]) iris_2 = data.table(iris[51:55,]) iris_1 iris_2 1. 两个data.table行合并 ##### --- 两个data.table行合并 --两个数据的列数应该相等 ##### #### --- 方法一 --纯粹的合并 rbind(iris_1,iris_2) ### -- 方法2 --- l = list(iris_1,iris_2) rbindlist(l, use.names=TRUE, fill=TRUE) %&amp;gt;% head() 2. 两个data.table列合并 ##### --- 两个data.table列合并 --两个数据的行数应该相等 ## --方法一 纯粹的合并 cbind(iris_1[,1:2],iris_2[,5]) ## --方法2 --- 类似 dplyr包中的链接 # merge(iris_1[,1:2], iris_2[,5], all=TRUE,sort=F) ## --方法3 --- 类似 dplyr包中的链接 # dt_a[dt_b,on=.(b = y)] 多个data.</description>
    </item>
    
    <item>
      <title>data.table -- 2基本概念</title>
      <link>/md/2018-01-17-datatable2/</link>
      <pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/md/2018-01-17-datatable2/</guid>
      <description>data.table基本概念和其余函数&amp;mdash;还需要修改 set* 函数族 会改变原有的数据，没有返回值，在data.table里，操作符&amp;quot;:=&amp;quot;和所有的以set开头函数（比如setkey,setorder,setname等）一样，它们都会更新输入的原数据。
library(data.table) iris_dt = data.table(iris) # setnames(DT,oldnames,newnames) # 改变DT的列名oldnames,newnames为向量即变量 #改变列的顺序 col_names = colnames(iris_dt) setcolorder(iris_dt,col_names[5:1]) # 更改某行某列的值,即更新元素的值 set(iris_dt,1,1,NA)# 更改1行1列的值为NA 1、键（主键）的概念 data.table从来不使用行名。data.table类似有行名的形式为1:，2: , ... 主键会对筛选的列进行重排序 我们把data.table数据中的行名叫做键（或主键），他类似于python的字典，使用键值对类型查找数据，键要求唯一，每一行有且只有一个键。但是R中的键可以用多个甚至可以重复，键就相当于索引，通过键进行数据的查找 setkey() 和 setkeyv()可以直接更新输入的data.table，就和上一讲中的操作符&amp;quot;:=&amp;ldquo;一样。它们没有返回值。 这个主键和其它语言不一样，例如python的键，唯一，在r中任意列都能使用setkey()来设置主键 library(data.table) mtcars_dt &amp;lt;- data.table(mtcars) # 可以看出mtcars数据集中的行名没有了，替而代之为1: ，2: # 若想保留行名，设置keep.rownames = T，当keep.rowname＝&amp;#34;new&amp;#34;时，列名改为new即可 mtcars_dt &amp;lt;- data.table(mtcars,keep.rownames = T)#默认创建一个叫做 rn的列，并且将行名赋值给这一列。 mtcars_dt 1.2、设置／获取／使用主键 怎么将数据中的某一列设置为主键呢？&amp;mdash;setkey()函数
setkey(DT, key) 将DT中的key列设置为主键，但是类行名 1:，2:,&amp;hellip;,不会发生改变, 上面等价 setkeyv(DT, &amp;quot;key&amp;quot;) ，也将DT中的key列设置为主键 一旦将某一列设置成data.table的主键，就可以在参数i里指定 .()来subset那些主键了(就可以进行行筛选了)。我们还是用mtcars数据集，我们增加一个新列new mtcars_dt &amp;lt;- data.table(mtcars) mtcars_dt[,new:=Sys.Date()+1:32] #增加一列new，内容为时间 setkey(mtcars_dt,new) mtcars_dt # 类似行名并没有发生改变， mtcars_dt[.</description>
    </item>
    
    <item>
      <title>data.table -- 1基本函数</title>
      <link>/md/2018-01-16-datatable1/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/md/2018-01-16-datatable1/</guid>
      <description>data.table本质上是一个list，它们的列包含的元素个数都相同。
1、数据的读写 1.1数据读入－－fread 选其常用的参数如下：
fread(input,na.strings=&amp;#34;NA&amp;#34;, file, stringsAsFactors=FALSE,encoding=&amp;#34;unknown&amp;#34;, ...) input 入的文件对象，fread函数可以自动判断分隔符类型，自动判断首行是否是列标题，同时默认读入时字符型变量不会变为因子型。也可也从网页读取数据 na.strings,对NA的解释； file文件路径，再确保没有执行shell命令时很有用，也可以在input参数输入; stringsASFactors是否转化字符串为因子， encoding，默认&amp;quot;unknown&amp;quot;，其它可能&amp;quot;UTF-8&amp;quot;或者&amp;quot;Latin-1&amp;quot;，不是用来重新编码的，而是允许处理的字符串在本机编码; showProgress = T 显示进度条 integer64 当数据列中有大于2 ^ 31的整数,可能会丢失精度 quote 对带双引号的字符添加转义,在R中正常显示,但是输出时,可能会引起成倍的双引号,因此建议使用fwrite时,设置该参数quote = FALSE 1.2数据写入－－fwrite fwrite(x, file = &amp;#34;&amp;#34;, append = FALSE, na = &amp;#34;&amp;#34;, row.names = FALSE, col.names = TRUE,logicalAsInt = FALSE, ...) x,比如data.frame和data.table等R的对象； file，输出文件名,&amp;ldquo;&amp;ldquo;意味着直接输出到操作台； append，如果TRUE,在原文件的后面添加；默认删除原来文件的数据，重新存储。 na,na值的表示，默认&amp;rdquo;&amp;quot;； row.names，是否写出行名，因为data.table没有行名，所以默认FALSE； col.names ，是否写出列名，默认TRUE，如果没有定义，并且append=TRUE和文件存在，那么就会默认使用FALSE; logicalAsInt,逻辑值作为数字写出还是作为FALSE和TRUE写出； 1.3 数据框转为data.table 对于数据的处理，data.table包提供了一个非常简洁的通用格式：DT[i,j,by]，
其中i控制列, j控制列, by控制分组. 上述表达式的意思是: 对于数据集DT，先选取子集行i, 然后通过by分组计算j。i设定数据的选取条件，j设定结果的计算方式，by设定数据的分组情况。通过这个，我们可以在一行代码中很方便地完成处理过程。首先需要把数据变为data.table类型 library(data.table) library(magrittr) ### 方法一: 赋值转换 mtcars_dt &amp;lt;- data.</description>
    </item>
    
  </channel>
</rss>
