<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mac on zsc</title>
    <link>/tags/mac/</link>
    <description>Recent content in mac on zsc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 07 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="/tags/mac/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>sublime text3 使用方法以及相关插件</title>
      <link>/macnote/20201007sublime-text3%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 07 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/macnote/20201007sublime-text3%E4%BD%BF%E7%94%A8/</guid>
      <description>sublime text3 使用方法以及相关插件 1. 软件的下载 1, 官网下载地址: http://www.sublimetext.com/
2, 如果不安装插件,那还不如不装 sublime, 参考: https://packagecontrol.io/installation
2. 插件的安装 2.1 安装Package Control  现在sublime 4 已出，自带这个功能啦 （2021年11月更新）  2.2 使用Package Control组件安装插件 mac: Cmd+Shift+P（Win：Ctrl+Shift+P），输入 install 选中 Install Package 并回车，输入或选择你需要的插件回车就安装了（注意左下角的小文字变化，会提示安装成功），安装其它插件也类似.
3. 插件推荐 3.1 软件风格 风格包网站: https://packagecontrol.io](https://packagecontrol.io/)
风格包: Spacegray：
https://packagecontrol.io/packages/Theme%20-%20Spacegray  Preferences &amp;gt; color scheme &amp;gt;theme-spacegray Preferences-&amp;gt; setting 中设置以下  &amp;#34;theme&amp;#34;: &amp;#34;Spacegray.sublime-theme&amp;#34;, &amp;#34;color_scheme&amp;#34;: &amp;#34;Packages/Theme - Spacegray/base16-ocean.dark.tmTheme&amp;#34; 3.2 主题推荐 3.2.1 Material 主题  安装主题  快捷键 ⌘(Command) + ⇧(Shift) + P回车后输入Package Control:Install再回车，输入Material搜索主题进行安装。</description>
    </item>
    
    <item>
      <title>mac 软件安装</title>
      <link>/macnote/20201006mac-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/macnote/20201006mac-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</guid>
      <description>mac 软件安装 利用homebrew安装,官网:https://brew.sh/
在终端运行
 $ /bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&amp;#34; 如果能运行成功,则下一步进行安装.
更换国内源(终端直接运行) &amp;ndash; 建议去官网
git -C &amp;#34;$(brew --repo)&amp;#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git git -C &amp;#34;$(brew --repo homebrew/core)&amp;#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git git -C &amp;#34;$(brew --repo homebrew/cask)&amp;#34; remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git  export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles source ~/.bash_profile brew update # 更新 更新 Homebrew 自己, brew upgrade # 更新所有的包 ### 最后查看是否配置成功 brew config 参考:
2019-11-20-mac常用软件
https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/
https://blog.cnrainbird.com/index.php/2020/05/19/osx_geng_huan_brew_yuan_jie_jue_xia_zai_man_wen_ti/
常用软件安装 brew cask install google-chrome # Google浏览器 brew cask install typora brew cask install sublime-text	brew cask install github brew cask install mathpix-snipping-tool brew cask install tencent-lemon # 腾讯柠檬清理软件 brew cask install contexts brew cask install firefox brew cask install the-unarchiver # 解压工具 brew cask install keka # 解压缩工具 # 可以购买myzip专业版,这个软件具有上述两个软件的常用功能,解压缩 brew cask install qq	brew cask install iina brew cask install mounty # U盘挂在软件 ## mounty开源的.</description>
    </item>
    
    <item>
      <title>mac 系统的设置</title>
      <link>/macnote/20201005mac-%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/macnote/20201005mac-%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E7%BD%AE/</guid>
      <description>mac 系统的设置 新系统, 首先我们要安装一些必要的软件,和做一些基本的设置.
本文做一些基本的设置
更改终端的颜色 和主机名 sudo echo &amp;#34;export CLICOLOR=1&amp;#34; &amp;gt;&amp;gt; ~/.bash_profile sudo echo &amp;#34;export LSCOLORS=gxfxcxdxbxegedabagacad&amp;#34; &amp;gt;&amp;gt; ~/.bash_profile sudo echo &amp;#34;export PS1=&amp;#39;\[\e[01;33m\][\[\e[01;35m\]\u\[\e[01;33m\]@\[\e[01;34m\]\h:\[\e[01;33m\]] \[\e[01;36m\]\w \[\e[01;32m\]\$ &amp;#39;&amp;#34;&amp;gt;&amp;gt; ~/.bash_profile  source ~/.bash_profile 参考: 2019-11-19mac终端样式PS1
命令行更改主机名
scutil --set HostName lucky # 重启终端 hostname #查看主机名  备注： 还有在mac中使用vim, 可以有更好的方法 使用sublime  vim a.txt # 可以用  subl a.txt open a.txt 以下看情况设置  如果不能用则设置  设置网络的DNS. 打开&amp;ndash;wifi &amp;mdash;&amp;raquo; 高级&amp;mdash;&amp;gt; 设置 DNS ,
添加
114.114.114.114 8.8.8.8 修改/etc/hosts   不推荐 修改这个文件啦</description>
    </item>
    
    <item>
      <title>Mac 系统盘的制作与安装</title>
      <link>/macnote/20201004mac-%E7%B3%BB%E7%BB%9F%E7%9B%98%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Sun, 04 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/macnote/20201004mac-%E7%B3%BB%E7%BB%9F%E7%9B%98%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>Mac 系统盘的制作与安装 参考https://www.iplaysoft.com/macos-usb-install-drive.html 这篇文章制作U盘系统盘
我个人推荐使用DiskMaker X 启动盘制作.官网: https://diskmakerx.com/
如何进入系统盘 关机重启, 长按Option即可选择进入U盘, 先利用磁盘工具,格式化主磁盘,然后,退出,在安装.
注意: 也可以在线安装&amp;hellip;
 Command（⌘）+ R ：安装Mac之前安装的最新macOS，而不升级到更高的版本。 Option + Command+ R：升级到与Mac兼容的最新macOS。 Shift + Option + Command + R：安装Mac原本出厂搭载的macOS，或是最接近且依然可用的版本。  https://blog.csdn.net/qq285744011/article/details/106987147
MacOS U盘安装提示副本损坏听语音 解决办法:
 断网以后 打开左上角实用工具--&amp;gt;终端, 输入  date 032208102015.20 按回车键确认
03是月，22是日，08是时，10是分，2015是年，20是秒 注意:先修改为现在的时间 , 还是不行再改往前修改为其他年份
当提示时间修改完成后，推出终端，重新安装MacOS即可
https://blog.csdn.net/li1339023842/article/details/102913864
https://xitongtiankong.com/archives/58221
https://jingyan.baidu.com/article/4d58d54155bd079dd5e9c043.html
然后一直等着就好了. 感觉比win的U盘安装慢,(mac基本上安装了1个小时左右)</description>
    </item>
    
    <item>
      <title>起因</title>
      <link>/macnote/20201003%E8%B5%B7%E5%9B%A0/</link>
      <pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/macnote/20201003%E8%B5%B7%E5%9B%A0/</guid>
      <description>起因 不知道latex最近抽什么风&amp;hellip; 导入eps文件出问题,报错如下:
gpl ghostscript 9.50: can&amp;#39;t find initialization file gs_init.ps. gpl ghostscript 9.53.2: unrecoverable error, exit code 1 心想不管了. 后又发现, 自己的毕业论文不能运行了? 心想我干脆更新了mactex(手贱)吧, 更新以后,有发现毕业论文还是报错, 以及以前的一些latex文稿都不能运行了. 我怀疑mactex 坏了, 于是卸载了, 重新安装&amp;hellip;&amp;hellip;..,来回试了几遍,咦,咋回事,都不行??? 开始着急了. 心想该不是我把重要的文件删了吧? (巧在我这个时候, 利用了一个清理软件&amp;mdash;&amp;ndash;且输入了密码&amp;hellip;) 于是开始了重装系统的想法&amp;hellip;&amp;hellip;
加上以前制作了U盘的mac系统.顺便尝试一下&amp;hellip;&amp;hellip;.
由于我设置的是时间作为顺序,因此更改一下时间,看起来有序</description>
    </item>
    
    <item>
      <title>latex 笔记</title>
      <link>/md/2020-08-10-latex%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/md/2020-08-10-latex%E7%AC%94%E8%AE%B0/</guid>
      <description>1, 交叉引用 \eqref{eq:eq1} :交叉引用公式编号自动带括号: 2, 完整模板解析 \documentclass[review]{elsarticle}  %\usepackage{ctex} \usepackage{lineno, hyperref} \hypersetup{colorlinks=true, citecolor=blue, anchorcolor=blue}   \modulolinenumbers[5]  %\usepackage[colorlinks, linkcolor=blue, anchorcolor=blue, citecolor=blue]{hyperref}  \usepackage{amsmath} \usepackage{amssymb} \usepackage{amsthm}  \usepackage[american]{babel} % 具有多语种处理功能的宏包,英文为默认文字,和microtype包一起使用,用于页面两端对齐 \usepackage{microtype} % 用于页面两端对齐  \usepackage{graphicx} % 插图包 --- \includegraphics[height=高度][angle=旋转角度]{图片文件名} \usepackage{multirow} % 处理表格 --列合并用”\multicolumn“，行合并用。\multirow{2}{*}{显示的文本} % 引用 --- \multirow 函数/标志符： {占用行数} {方框边界竖线|文字居左中右|方框边界竖线} {内容} % 引用 --- \multicolumn 函数/标志符： {占用列数} {方框边界竖线|文字居左中右|方框边界竖线} {内容}  \usepackage{indentfirst} %段首缩进需要的宏包 \setlength{\parindent}{2em}%设置段首缩进两个汉字 %\noindent强制不缩进 % \setlength{\parskip}{1em}%paragraph skip,调整的是段落间距离  %\usepackage{lscape} % 表格横置, 只需要引用 landscape 环境即可 %\usepackage{pdflscape} % 页面横置,只需引用landscape环境即可 %\usepackage[figuresright]{rotating} % 将表格旋转为纵向放置，使用rotating宏包 % 要使用 sidewaystable 环境 %\usepackage{natbib}\usepackage[authoryear]{natbib}  \usepackage{enumerate} % enumerate 宏包 ,可以给有序列表设置 label,以及有缩进 %\usepackage{enumitem} % 可以给出缩进调整间距, label %\usepackage{showkeys} % 引用时显示引用的 label %\usepackage{paralist} % 列表相互嵌套是的缩进 ,也可以给出相应 label ,但是 label 和缩进都要设置   %%%%%% 交叉引用 开始%%%%%%% %% 第一部分 自定义新环境, \theoremstyle{definition} %自定义环境内的风格,比如字体是否为斜体,等等,这里采用的是正体 \newtheorem{thm}{Theorem} \newtheorem{cor}{Corollary} \newtheorem{lem}{Lemma} \newtheorem{pot}{\bf Proof} \newtheorem{rmk}{Definition} \newtheorem{pro}{Property} \newtheorem{example}{Example} %\newtheorem{exmp}{Example}  %% 第二部分 ,如果想要在引用时,自动添加definition,Theorem等字样,使用下面这部分 \usepackage[capitalize, nameinlink]{cleveref} %交叉应用 在数字前自动添加某些字符; 引用时 用\cref{}的形式 \crefname{thm}{Theorem}{Theorems} %\crefname{cor}{Corollary}{Corollarys} \crefname{lem}{Lemma}{Lemmas} \crefname{pot}{Proof} {Proofs} \crefname{rmk}{Definition}{Definitions} \crefname{pro}{Property}{Propertys} \crefname{example}{Example}{Examples} \crefname{figure}{Figure}{Figures} % 图片以及表格有默认的,但是也可以重新定义 % \DeclareUnicodeCharacter{0301}{\&amp;#39;{e}} %pdflatex 需要用到 UTF-8 字符时，需要此命令   %%%%%% 交叉引用结束 %%%%%%%   \journal{European Journal of Operational Research}    % 参考文献的引用样式,可以去网上找各大期刊的模板 \bibliographystyle{elsarticle-harv}\biboptions{authoryear}  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%一下为正文部分 \begin{document} \section{Introduction}  \section{Preliminaries} \section*{Acknowledgements}     \setcitestyle{numbers} \bibliography{references} % 这里引用的 bibtex 参考文献 \end{document} 注释:</description>
    </item>
    
    <item>
      <title>macOS tcping 检测IP端口</title>
      <link>/macnote/2019-11-22macos-tcping-%E6%A3%80%E6%B5%8Bip%E7%AB%AF%E5%8F%A3/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/macnote/2019-11-22macos-tcping-%E6%A3%80%E6%B5%8Bip%E7%AB%AF%E5%8F%A3/</guid>
      <description>macOS tcping 检测IP端口 安装tcping $ brew install tcping $ which tcping 2，检测IP端口是否被屏蔽 $ tcping 14.215.177.39 80 </description>
    </item>
    
    <item>
      <title>mac 挂载NTFS出现灰色文件</title>
      <link>/macnote/2019-11-21mac%E7%A1%AC%E7%9B%98%E6%96%87%E4%BB%B6%E5%8F%98%E7%81%B0%E8%89%B2/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/macnote/2019-11-21mac%E7%A1%AC%E7%9B%98%E6%96%87%E4%BB%B6%E5%8F%98%E7%81%B0%E8%89%B2/</guid>
      <description>Mac下使用Mounty挂载NTFS出现了文件不能拷贝的解决办法 Mac下使用Mounty挂载NTFS出现了文件不能拷贝的解决办法，即文件出现灰色的现象。 或者使用付费的Tuxera 软件都会出现灰色文件,
解决办法(在终端的灰色文件目录下面的命令即可)
xattr -d com.apple.FinderInfo * </description>
    </item>
    
    <item>
      <title>git 笔记</title>
      <link>/md/2019-11-20-git%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/md/2019-11-20-git%E7%AC%94%E8%AE%B0/</guid>
      <description>1. git 的安装与配置 安装不多说,
初次运行 git前的配置, 配置全局信息: 用户名与邮箱,(此处的用户名与邮箱需要到 github 注册)
$ git config --global user.name &amp;#34;XXX&amp;#34; $ git config --global user.email &amp;#34;email@example.com&amp;#34; 如果已经多次使用 git ,可以用以下命令进行查看
$ git config -l % 查看所有配置信息 $ git config --global -l % 查看全局配置信息 $ cat ~/.gitconfig % 用户的配置文件 注意git config命令的--global参数，用了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然也可以对某个仓库指定不同的用户名和Email地址。
一些终端基础命令
$ ls -al # 查看所有文件夹 $ pwd # 查看当前所在的目录 $ clear # 清屏(终端) 2 . 创建本地仓库 2.1 创建版本库 (即初始化一个空仓库, 这个目录下的所有路径都称作工作区) 版本库又名仓库(repository)，你可以简单理解成一个目录，这个目录里面的所有文件都可以被Git管理起来，每个文件的修改、删除，Git都能跟踪，以便任何时刻都可以追踪历史，或者在将来某个时刻可以“还原”。
$ git init # 该命令会在当前目录下创建了隐藏目录.</description>
    </item>
    
    <item>
      <title>mac 常用软件</title>
      <link>/md/2019-11-20-mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/md/2019-11-20-mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</guid>
      <description>1, xcode命令工具(一下 以都是在 终端下运行 ,%为注释) xcode-select --install 2. homebrew 主页: https://brew.sh/ 2.1安装 /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 2.2 卸载(未试过) 方法一: 网上找的,
可参考: https://blog.csdn.net/qq_41234116/article/details/79366454
方法 2: 官方版本
ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&amp;#34; https://github.com/Homebrew/brew/blob/master/docs/FAQ.md
https://stackoverflow.com/questions/23251665/how-to-uninstall-homebrew
2.3 安装包 和卸载包 brew install &amp;lt;packageName&amp;gt; % 这个安装的是只有命令行的工具  brew cask install google-chrome % 注意 brew cask install 安装的是有图像界面的 app  brew uninstall &amp;lt;packageName&amp;gt;  brew cask uninstall &amp;lt;packageName&amp;gt;  brew list % 已安装列表  brew update % 注意每次使用这个是 都很慢, 可进行源的更新  brew cask search &amp;lt;packageName&amp;gt; %查询&amp;lt;packageName&amp;gt;  brew cask info &amp;lt;packageName&amp;gt; % 查看版本信息  brew config %查看brew配置  brew outdated % 查看那些包（软件）可以更新 brew upgrade # 更新所有的包，Homebrew 会安装新版本的包，但旧版本仍然会保留 brew upgrade $FORMULA # 更新指定的包  brew cleanup # 清理所有包的旧版本，将旧有的软件安装包进行清理 brew cleanup $FORMULA # 清理指定包的旧版本 brew cleanup -n # 查看可清理的旧版本包，不执行实际操作   brew cask install qlcolorcode # 预览使得文本具有颜色,即给代码上色 brew cask install qlstephen # 语法高亮  ### 更新brew cask 安装过的软件.</description>
    </item>
    
    <item>
      <title>mac常用软件安装</title>
      <link>/macnote/2019-11-20mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/macnote/2019-11-20mac%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</guid>
      <description>1, xcode命令工具(一下 以都是在 终端下运行 ,%为注释) xcode-select --install 2. homebrew 主页: https://brew.sh/ 2.1安装 把DSN 设置为8.8.8.8和8.8.4.4 这样才不会报错
/usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 2.2 卸载(未试过) 方法一: 网上找的,
可参考: https://blog.csdn.net/qq_41234116/article/details/79366454
方法 2: 官方版本
ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)&amp;#34; https://github.com/Homebrew/brew/blob/master/docs/FAQ.md
https://stackoverflow.com/questions/23251665/how-to-uninstall-homebrew
2.3 安装包 和卸载包 brew install &amp;lt;packageName&amp;gt; % 这个安装的是只有命令行的工具 brew cask install google-chrome % 注意 brew cask install 安装的是有图像界面的 app brew uninstall &amp;lt;packageName&amp;gt; brew cask uninstall &amp;lt;packageName&amp;gt; brew list % 已安装列表 brew update % 注意每次使用这个是 都很慢, 可进行源的更新 brew cask search &amp;lt;packageName&amp;gt; %查询&amp;lt;packageName&amp;gt; brew cask info &amp;lt;packageName&amp;gt; % 查看版本信息 brew config %查看brew配置 brew outdated % 查看那些包（软件）可以更新 brew upgrade # 更新所有的包，Homebrew 会安装新版本的包，但旧版本仍然会保留 brew upgrade $FORMULA # 更新指定的包 brew cleanup # 清理所有包的旧版本，将旧有的软件安装包进行清理 brew cleanup $FORMULA # 清理指定包的旧版本 brew cleanup -n # 查看可清理的旧版本包，不执行实际操作 brew cask reinstall qq % 推荐，直接重新安装 ########文本文件预览 brew cask install qlcolorcode # 预览使得文本具有颜色,即给代码上色 brew cask install qlstephen # 语法高亮 brew cask install qlcolorcode qlstephen qlmarkdown quicklook-json qlimagesize webpquicklook suspicious-package quicklookase qlvideo brew cask install suspicious-package quicklookase qlvideo 超级右键 macApp 安装 软件更新 brew cask outdated # 可以查看cask安装的软件是否存在着需要更新的版本； brew cask upgrade xxx #进行软件更新； brew tap buo/cask-upgrade # 安装 brew-cask-upgrade brew cu # 更新所有过时应用： brew cu [CASK] # 更新指定应用： 软件清理 brew cleanup --prune 0 cleanup [options] [formula|cask] Remove stale lock files and outdated downloads for all formulae and casks, and remove old versions of installed formulae.</description>
    </item>
    
    <item>
      <title>mac 终端样式配置</title>
      <link>/macnote/2019-11-19mac%E7%BB%88%E7%AB%AF%E6%A0%B7%E5%BC%8Fps1/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/macnote/2019-11-19mac%E7%BB%88%E7%AB%AF%E6%A0%B7%E5%BC%8Fps1/</guid>
      <description>mac 终端样式配置 首先，弄明白bash 和zsh&amp;hellip;.
1 mac shell一览 unix核的系统如linux、macos的shell 默认都是bash
就如第一张图查询所示，mac有6个shell，默认是/bin/bash
1.1 查看安装了哪些shell ： cat /etc/shells 1.2 查看当前使用的shell echo $SHELL # 方法一 echo $0 # 方法二 1.3 bash和zsh切换 切换到bash
chsh -s /bin/bash 切换到zsh
chsh -s /bin/zsh 记得输入切换命令后，要重新打开终端terminal才生效哦！
2、终端美化 &amp;mdash;iterm2 + zsh配置方法 2.1 安装iterm2 -官网 我不能确定zsh是否需要iterm2作为基础，因此我安装了iterm2
 官网下载安装： https://www.iterm2.com/ brew 安装，$ brew cask install iterm2  2.2 zsh 配置方法 要自定义各种配置 我们就要修改默认shell 改用zsh，据说zsh比bash更强大（都是浮云 读者自行查找为啥强大吧），oh my zsh是开源的 a delightful &amp;amp; open source framework for Z-Shell，也就是说我们用它 配置zsh更容易</description>
    </item>
    
    <item>
      <title>R中常用的批处理操作</title>
      <link>/md/2019-11-19-r%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%89%B9%E5%A4%84%E7%90%86%E6%93%8D%E4%BD%9C/</link>
      <pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/md/2019-11-19-r%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%89%B9%E5%A4%84%E7%90%86%E6%93%8D%E4%BD%9C/</guid>
      <description>批量重命名文件名 setwd(&amp;#39;/Users/zsc/Desktop/音乐mp3/&amp;#39;)  library(stringr) oldname = list.files(pattern = &amp;#39;.*mp3&amp;#39;) newname = str_extract(d,&amp;#39;.*(?=158)&amp;#39;) df = data.frame(oldname = oldname, newname = newname) df file.rename(df$oldname, df$newname) 批量统计 pdf 的页数 library(qpdf) setwd(&amp;#39;/Users/zsc/Desktop/pdf/&amp;#39;) d = list.files() d  d1 = str_extract(d,&amp;#39;.*?.pdf$&amp;#39;)   library(purrr) map_dbl(d1, pdf_length)  map_dbl(d1, pdf_length) %&amp;gt;% sum() 移除latex生成的临时文件 p = getwd() cat(p,&amp;#39;\n&amp;#39;) t = &amp;#39;*.aux|*.bbl|*.bcf|*.blg|*.log|*.xml|*.out|*.spl|*.synctex.gz&amp;#39; del = list.files(path = p,pattern = t) file.remove(del) </description>
    </item>
    
  </channel>
</rss>
